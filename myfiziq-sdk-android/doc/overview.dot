digraph hierarchy {
	size="5,5";
	rankdir="LR";
    compound=true;
    //rank=same;
	//rankdir="BT"
	node[shape=mrecord];
	//edge[dir=forward, arrowtail=empty]


	subgraph cluster_Cursor {
	    label = "Cursor";
	    CursorHolder;
	    RecyclerCursorAdapter;
	    RecyclerManager;
	}

	subgraph cluster_ORM {
	    label = "ORM";
	    Model[label="Model..."];
	    ORMContentProvider;
	    ORMDbFactory;
	    ORMDbCache;
	    ORMTable;
	    ORMDbHelper;
	    SQLiteCursor;
	}

	subgraph cluster_UI {
	    label = "Activity/Fragment";
	    BaseActivity;
	    BaseActivityInterface;
	    BaseFragment;
	    FragmentInterface;
	    RecyclerView;
	    BaseModelViewInterface[label="BaseModelViewInterface<Model>"];
	}

	subgraph cluster_JNI {
	    JNI;
	}
	
	subgraph cluster_API {
	    label = "API";
	    apiGet;
	    apiPost;
	    apiPut;
	    apiDelete;
	    
	}

	subgraph cluster_libCurl {
	    label = "libCurl";
	    libCurl;
	    
	}

	subgraph cluster_jsoncpp {
	    label = "C++ ORM";
	    JsonCpp;
	    Schema;
	    SQLite;
	    
	}

    JNI->apiGet[ltail=cluster_JNI,lhead=cluster_API];
    JNI->apiPost[ltail=cluster_JNI,lhead=cluster_API];
    JNI->apiPut[ltail=cluster_JNI,lhead=cluster_API];
    JNI->apiDelete[ltail=cluster_JNI,lhead=cluster_API];

    apiGet->JsonCpp[ltail=cluster_API,lhead=cluster_jsoncpp];
    apiGet->libCurl[ltail=cluster_API,lhead=cluster_libCurl];
    JsonCpp->Schema;
    Schema->SQLite;
    SQLite->ORMContentProvider;

    //UI->ORM[constraint=true]
    BaseActivity->RecyclerView;
    BaseActivity->BaseFragment;
    BaseActivity->BaseActivityInterface;
    BaseFragment->RecyclerView;
    BaseFragment->FragmentInterface;
    RecyclerManager->RecyclerView;
    RecyclerView->Model;
    RecyclerView->BaseModelViewInterface;
    BaseModelViewInterface->Model;
    BaseActivity->RecyclerManager;
    BaseFragment->RecyclerManager;
    RecyclerView->CursorHolder;
    RecyclerCursorAdapter->CursorHolder;
    CursorHolder->SQLiteCursor;
    ORMContentProvider->SQLiteCursor;
    ORMDbHelper->ORMTable;
    ORMTable->Model;
    ORMDbCache->Model;
    ORMDbFactory->ORMDbHelper;
    
    Cloud[shape=cylinder, style=filled];
    libCurl->Cloud;
    
    BaseActivity->JNI[ltail=cluster_UI,lhead=cluster_JNI]
}